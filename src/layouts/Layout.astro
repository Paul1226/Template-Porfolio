---
interface Props {
	title: string;
	shouldRenderComponent?: boolean;
	first?: string;
	second?: string;
	third?: string;
}

const { title, shouldRenderComponent = true, first, second, third } = Astro.props;

// fonts
import '@fontsource-variable/manrope'; // 200 - 800

// components
import Footer from '../sections/Footer.astro';
import Nav from '../sections/Nav.astro';
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="bg-smoke-950 text-sm min-h-screen flex items-center">
		<div class="w-11/12 max-w-[400px] md:max-w-[870px] 2xl:max-w-[1422px] mx-auto py-4">
			<main class="w-full h-full flex flex-col gap-3">
				{
					shouldRenderComponent && (<Nav primero={first} segundo={second} tercero={third} />)
				}
				<slot/>
				<!-- <Footer/> -->
			</main>
		</div>
	</body>
</html>
<style is:global>
	*{
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}
	html, body {
		font-family: 'Manrope Variable', sans-serif;
		scrollbar-width: thin;
		scrollbar-color: #a291fd #050505;
		color: #f4f3ff;
	}
</style>

<!-- <script>
    
    document.addEventListener('DOMContentLoaded', function() {
        const linksNav = document.querySelectorAll(".link-nav") as NodeListOf<HTMLAnchorElement>
        function getHref() {
            let href = window.location.pathname
            href.endsWith("/") ? href = href.slice(0, -1) : href
            return href
        }

        linksNav.forEach(link => {
            let linkHref = link.getAttribute("href")
            const pathName = getHref()

            linkHref?.endsWith("/") ? linkHref = linkHref.slice(0, -1) : linkHref

            console.log(linkHref, pathName)

            if(pathName === linkHref) {
                link.classList.add("active")
            }else {
                link.classList.remove("active")
            }
        })
    })
</script> -->